{"version":3,"sources":["components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","defaultProps","App","useState","num","input","setInput","setNum","total","setTotal","value","JSON","stringify","className","action","type","onChange","e","Number","target","onClick","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAGMA,EAAS,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACf,OACE,iCACE,6BAAKA,OAKXD,EAAOE,aAAe,CACpBD,MAAO,WAOMD,QC0CAG,MAxDf,WACE,IADa,EAKaC,mBAAS,CAAC,CAACC,IAAK,MAL7B,mBAKNC,EALM,KAKCC,EALD,OAMSH,mBAAS,CAAC,CAACC,IAAK,MANzB,mBAMNA,EANM,KAMDG,EANC,OAOaJ,mBAAS,CAACK,MAAO,KAP9B,mBAONA,EAPM,KAOCC,EAPD,KAyBXC,EAASC,KAAKC,UAAUJ,GAQ1B,OACE,sBAAKK,UAAU,YAAf,UACE,cAAC,EAAD,IACA,6BAnCS,gBAqCT,uBAAMA,UAAU,WAAUC,OAAO,GAAjC,UAEA,uBAAOC,KAAK,SAASL,MAAOL,EAAOW,SAvBpB,SAAAC,GACnBX,EAASY,OAAOD,EAAEE,OAAOT,WAwBrB,oCAED,uBAAOK,KAAK,SAASL,MAAON,EAAKY,SAvBhB,SAAAC,GACpBV,EAAOW,OAAOD,EAAEE,OAAOT,cA4BnB,wBAAQU,QAvCG,SAACH,GAChBI,QAAQC,IAAIjB,EAAQD,GACpBK,EAASJ,EAAQD,IAqCb,4BACA,0CAAaM,SC5CJa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a0b3e024.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Header = ({title}) => {\r\n  return (\r\n    <header>\r\n      <h1>{title}</h1> \r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: \"Website\",\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","\n// import './App.css';\nimport Header from './components/Header'\nimport { useState } from 'react'\n\nfunction App() {\n  const name = \"Peter Radev\"\n  // let num1 = 0;\n  // let num2 = 0;\n\n  const [input, setInput] = useState([{num: ''}]);\n  const [num, setNum] = useState([{num: ''}]);\n  const [total, setTotal] = useState({total: ''});\n\n  \n\nconst logValue = (e) => {\n  console.log(input + num);\n  setTotal(input + num);\n  // e.preventDefault();\n}\n\nconst handleChange = e => {\n  setInput(Number(e.target.value));\n}\n\nconst handleChange2 = e => {\n  setNum(Number(e.target.value));\n}\n\nlet value  = JSON.stringify(total);\n\n\n  // const logNum = () => {\n  //   console.log(num);\n  // }\n  \n\n  return (\n    <div className=\"container\">\n      <Header />\n      <h2>{name}</h2>\n      {/* <img src={} alt=\"profile-image\"/> */}\n      <form className=\"addition\"action=\"\">\n\n      <input type=\"number\" value={input} onChange={handleChange} />\n\n      <p> + </p>\n\n\t    <input type=\"number\" value={num} onChange={handleChange2} />\n\n\t    \n\n      </form>\n\n      <button onClick={logValue} > Print Number </button>\n      <h1>Answer: {value}</h1>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}